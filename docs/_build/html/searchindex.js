Search.setIndex({docnames:["binary_tree","contents","decision_node","index","random_forest"],envversion:{"sphinx.domains.c":1,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":1,"sphinx.domains.javascript":1,"sphinx.domains.math":2,"sphinx.domains.python":1,"sphinx.domains.rst":1,"sphinx.domains.std":1,"sphinx.ext.intersphinx":1,sphinx:56},filenames:["binary_tree.rst","contents.rst","decision_node.rst","index.rst","random_forest.rst"],objects:{"source.binary_tree":{TorchDecisionTreeClassifier:[0,0,1,""],TorchDecisionTreeRegressor:[0,0,1,""]},"source.binary_tree.TorchDecisionTreeClassifier":{fit:[0,1,1,""],predict:[0,1,1,""]},"source.binary_tree.TorchDecisionTreeRegressor":{fit:[0,1,1,""],predict:[0,1,1,""]},"source.decision_node":{DecisionNode:[2,0,1,""]},"source.random_forest":{TorchRandomForestClassifier:[4,0,1,""],TorchRandomForestRegressor:[4,0,1,""]},"source.random_forest.TorchRandomForestClassifier":{fit:[4,1,1,""],predict:[4,1,1,""]},"source.random_forest.TorchRandomForestRegressor":{fit:[4,1,1,""],predict:[4,1,1,""]}},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"]},objtypes:{"0":"py:class","1":"py:method"},terms:{"case":2,"class":[0,2,4],"float":2,"function":[0,2,4],"int":[0,2,4],"return":[0,2,4],"true":[2,4],The:[0,2,3,4],abov:2,actual:1,after:[0,4],along:2,associ:[0,2,4],base:[0,4],been:1,below:[2,3],binari:[0,1,2],binary_tre:[0,4],bool:4,bootstrap:4,build:[0,2,4],built:[0,4],call:[0,2,4],can:[0,2,3,4],classif:[0,4],classifi:[0,4],col:2,correspond:[0,2,4],count:2,criterion:0,data:[0,4],decis:[0,1,2,4],decision_nod:[0,2,4],decisionnod:[0,4],depth:[0,4],detail:3,dict:2,dictionari:2,differ:[0,1,2,3,4],dimens:[2,4],don:3,dure:[0,4],each:[0,4],either:2,entropi:0,explan:3,fals:2,fit:[0,4],floattensor:[0,2,4],follow:[0,4],forest:[1,4],found:3,gather:1,given:[0,2],group:2,has:1,implement:[0,1,4],index:3,initialis:[0,4],input:4,kei:2,label:[0,2,4],left:2,librari:3,longtensor:[0,4],made:4,max_depth:[0,4],maximum:[0,4],miss:3,modul:3,must:[0,4],nb_sampl:4,nb_tree:4,node:[1,2],none:[0,2],num_dimens:[0,4],num_dimensions_valu:[0,4],num_dimensions_vector:[0,4],num_vector:[0,4],number:[0,4],object:[0,1,2,3,4],onli:1,optim:0,option:0,packag:1,page:3,paramet:[0,2,4],perform:2,predict:[0,4],problem:[0,4],progress:3,random:[1,4],random_forest:4,recurs:[0,2,4],regress:[0,4],regroup:3,repres:[0,4],result:2,right:2,sampl:4,search:3,set:4,shape:[0,4],solv:[0,4],some:3,sourc:[0,2,4],space:2,specif:[0,4],specifi:2,split:[0,2],still:3,success:[0,4],surpris:3,tensor:[0,2,4],thi:[0,3,4],three:1,torch:[0,2,4],torchdecisiontreeclassifi:[0,4],torchdecisiontreeregressor:[0,4],torchrandomforestclassifi:4,torchrandomforestregressor:4,tree:[0,1,2,4],two:2,type:[0,1,4],used:[0,2,4],valu:[0,2,4],varianc:0,vector:[0,4],where:2,which:[0,2,4],work:3},titles:["BinaryTree :","Developer documentation :","DecisionNode :","Welcome to Sklearn-Pytorch\u2019s documentation!","RandomForest :"],titleterms:{binarytre:0,decisionnod:2,develop:1,document:[1,3],indic:3,pytorch:3,randomforest:4,sklearn:3,tabl:3,welcom:3}})